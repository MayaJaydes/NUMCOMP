Maya Sosa
Log for PHZ 3150, Fall 2021

*****IN: Thurs Aug 26 18:32:35 EST 2021

Made a directory under OneDrive-Knights-University of Central Florida titled: 'NUMCOMP'
Saved HW1_MayaSosa in directory

 Log saved under:
 C:\Users\Maya's Computer\OneDrive-Knights-University of Central Florida/NUMCOMP

 Began Survey from HW 1:
 UCF Physics PHZ 3150: Introduction to Numerical Computing
 Name: Maya Sosa
 Email: Maya.Jaydes@knights.ucf.edu
  Phone: (863)-268-9739
Major: Photonic Science and Engineering
Year: 2nd (Sophomore)
ID: 5114211
How did you hear about this course?
My Advisor in CREOL, Mike McKee recommended this course as a substitute for ENG3211 because it focuses more on python, which I will use as an optics major.
Do you have a laptop you can bring to class, install software on, etc.?
Yes
What operating system and version does it run?
Windows 10 64-bit
How much free disk space does it have?
797GB
What operating systems are you comfortable working in?
Mostly just Windows as I have never owned a MAC or any laptop with a operating system other than Windows.
What computer classes have you taken, including high school, extracurricular, etc.?
I have taken computer classes focusing on gaining our certifications in AutoDesk programs such as AutoCAD and Inventor.
Have you ever programmed a computer?
No
In what language(s)? N/A
Summarize your experience: N/A
Have you taken statistics or probability?
Yes, I took and passed the AP test for AP Statistics in high school.
Why are you taking this course?
To fulfill a prerequisite for my major as well as learn more about computer programming with Python.
Are there particular topics you hope to learn?
No particular topics, as I am completely new to programming.
If you have worked with scientific data or modeling before, briefly describe your experience:
In my Physics I lab last semester we worked with scientific data and modeling as part of our group experiments. Some of my team members used python to input the data and calculate t' scores though I did not use it. It seemed time consuming and difficult since we all had no idea what Python was.
Have you ever been involved with a science club or similar?  If so, describe:
I was involved in my school's science fair back in middle school.

Finished Survey

Created a directory for books under:
C:\Users\Maya's Computer\OneDrive-knights-University of Central Florida/Books
Looked up 'Think Python book'
Clicked on Link: https://greenteapress.com/wp/think-python-2e/
Clicked on link titled 'Download Think Python 2e in PDF.'
Opened file app and moved PDF file: https://greenteapress.com/thinkpython2/thinkpython2.pdf to the directory just created

*****OUT: Thurs Aug 26 19:12:26 EST 2021


*****IN: Tues Aug 31 21:00:07 EST 2021

Moved NUMCOMP folder to C:\Users\Maya's Computer\Downloads\NUMCOMP from Knights OneDrive (as shown in entry 1)
Created a folder within NUMCOMP called 'Handin' where I will be putting the compressed zip files of the homework that I turn in
Renamed log in Atom from 'HW1_MayaSosa' to 'Main Log'

Opened Microsoft Store and downloaded Ubuntu (previously enabled Windows Subsystem for Linux through Control Panel→Programs→Turn Windows Features On Or Off and restarted computer)
Followed prompts and created a username and password for Ubuntu
Played around with commands learned in class such as: cp, mv, and wc

1a) Done Previously:
Opened Anaconda Prompt (Anaconda) through Windows start button
Followed win10-software.pdf under PHZ3150>Files>Handouts>Installation Instructions in Webcourses to update miniconda and install Jupyter
Typed: "conda update --all" in Anaconda Prompt and followed prompts to update miniconda
Added packages to conda by typing "conda install numpy scipy ipython matplotlib" and following prompts
Installed conda by typing "conda install jupyter" and following prompts
Done Now:
Opened Jupyter notebook Windows Start>Anaconda3 (64-bit)>Jupyter notebook
Copied link shown in notebook by highlighting and using keyboard commands ctrl + c and then pasted in chrome search bar using ctrl + v
Clicked New->Python3->Help->About to get information on Python version (Python 3.9.6) and used keyboard commands start + prtscr to take screenshot, right clicked on file and renamed it HW2_MayaSosa_JupyterNotebook_scrnsht

1b) Vistited https://desktop.github.com/ and clicked download to download Github desktop
Opened .exe file that was downloaded and logged into my existing account that was already synced with classroom phz3150 / phz3150_main_dir
Took a screenshot using keyboard commands used previously, right cicked on file and renamed it HW1_MayaSosa_Gitbub_scrnsht

2) I have no idea what syntax and tokens are so I'm just assuming syntax is word structure and tokens are punctuation
The bird high really flew today.
The! bird flew really, high today?
What main “feature” of natural languages prevents their use (so far) as programming languages, and why?
Natural language is very complex and abstract, for example we have multiple meanings for the same word based on the location a speaker comes from. Computers use very precise language for certain actions, and natural language is ever changing and evolving, but as native speakers we can understand the changes where computers cannot.

3) Opened link: https://guides.github.com/activities/hello-world/ and followed Github hello-world tutorial
Went into the class Files>Homework>HW1 and downloaded hw1-survey.txt
Went to phz3150_main_dir-MayaJaydes/HW/HW1/ in Github and dragged and dropped hw1-survey.txt file
Committed the change with message of "Added Files: Added hw1-survey.txt as required for HW2" and took screenshot using previous keyboard commands, renaming it Hw2_MayaSosa_Github_AddedFiles_scrnsht

*****OUT Wed Sept 1 10:12:36 EST 2021

*****IN Tues Sept 8 10:23:16 EST 2021

XXXXX Tues Aug 31st

Renamed this log from 'Main Log' to '0-PHZ3150-MayaSosa-Log'

For all problems:
Renamed all screenshots appropriately by right clicking the file and renaming.

Problem 2:
a)The b!rd fl$w h!igh.
b)Bird the high flew.

Problem 3:
Took a screenshot using keyboard commands of Github desktop showing hw1_survey.txt and renamed it HW2_Maya_prob3_scrnsht1.png

*****OUT Tues Sept 8 10:49:06 EST 2021

*****IN Tues Sept 8 13:38:45 EST 2021

Start HW 3

Problem 1:
Went to Downloads\NUMCOMP\Handin and selected "New Folder"
Renamed folder "HW3_MayaSosa"
Deleted folder (so I could make it again through the terminal in problem 2)

Problem 2:
Under Windows Start opened Ubuntu
a) To make directory: mkdir Downloads/NUMCOMP/Handin/HW3_MayaSosa
  To make that my current directory:  cd Downloads/NUMCOMP/Handin/HW3_MayaSosa
  To list: ls (it was empty)
b) To find time and date: date
c) To go from Downloads/NUMCOMP/Handin/HW3_MayaSosa to Downloads/NUMCOMP/Handin (move up one directory) : cd ..
d) To list current directory: ls
  To remove HW3_MayaSosa (with confirmation): rm -r -i HW3_MayaSosa
e) To list current directory with long output: ls -la
  To list current directory in reverse time order and human friendly: ls -ltr -lh

Problem 3:
a)Opened Github Desktop clicked top left Current Repository > Add > Create New Repository...
  Named it HW3_repository, checked initialize with a README, and added description "Practice for HW3"
  Under 'Repository' clicked 'Open in Command Prompt'
  git status to check if the repository was there and git init to initialize repository
  Set up username and email: git config --global user.name MayaJaydes; git config --global user.email Maya.Jaydes@knights.ucf.edu
b) In files (on computer) selected 0-PHZ3150-MayaSosa-Log and selected 'Copy to'. Copied file to ~Downloads\NUMCOMP\Github\HW3_repository
  Opened Github desktop and selected 0-PHZ3150_MayaSosa-Log and in description wrote "Commiting log for HW3 Problem 3b" and selected 'Commit to main'
  On the top right I selected 'Publish Repository' and followed the prompts to publish my repository to the Github website
c) In Files (on computer) selected Handin folder and selected 'Copy to'. Copied folder to ~Downloads\NUMCOMP\Github\HW3_repository. Now Github will keep track of the folder.
d) In files (on computer) selected test.dat and selected 'Copy to'. Copied file to ~Downloads\NUMCOMP\Github\HW3_repository. Opened Github desktop and took a screenshot of added file using keyboard commands (Windows + PrtScr). Renamed screenshot accordingly.
  Selected test.dat on Github desktop and added description "Commiting file for HW3 problem 3d" then clicked 'commit to main'
  Then removed test.dat file from repository by right-clicking and selecting 'Undo Commit' and right-clicking again to select 'Undo changes' which removed test.dat from my HW3_repository
e) Recopied log to HW3_repository and opened Github desktop. When selecting the log Git hub showed the changes I had made to the log since last commiting. Wrote "Commiting changes made to HW3 for Problem 3e" and selected commit to main.
  Copied screenshot taken in problem 3d to handin folder and opened Github desktop. Wrote "Screenshot from HW3 problem 3d commiting for HW3 problem 3e" and selected commit to main.
f) In Github desktop under repository opened command prompt. Typed 'Git log' and pressed enter. Took a screenshot of log using keyboard commands and renamed screenshot appropriately.

Problem 4:
To prepare and submit my hw I will save this log and go to File < Save and then go into Downloads/NUMCOMP, right click on 0-PHZ3150-MayaSosa-Log and send to < compressed (zip) folder.
Drag and drop newly zipped folder to Downloads/NUMCOMP/Handin and right click to rename folder HW3_MayaSosa. I will drag and drop the screenshots taken inside zip folder and submit on webcourses for HW 3.
On Github Desktop I will commit any changes made with a description and fetch origin.

*****OUT Tues Sept 8 18:45:57 EST 2021

*****IN Tues Sept 14 1:56:27 EST 2021

Start HW 4

Problem 1:
Opened Files --> ~\Downloads\NUMCOMP\Handin and selected 'New Folder'. Named Folder HW4_MayaSosa
Windows Start --> Jupyter Notebook --> Downloads\NUMCOMP\Handin\HW4_MayaSosa --> New > Notebook: Python 3
Selected 'Untitled' and changed name to 'HW4_MayaSosa'
Already saved to HW folder and pushed to github

Problem 2:
In Jupyter Notebook HW4_MayaSosa wrote '# Maya Sosa; HW4; Sept 14 14:09:07 EST 2021' in first cell as a comment
In next cell imported numpy and math: 'import numpy as np' and 'import math' and clicked run
In next cell wrote:

print('Problem 2:') #As stated in the hw file to do

m = np.array([10,15,20,40]) #To create arrays that can easily multiply values in the table
a = np.array([5,10,5,3])

F=m*a #Wrote down equation that is to be used
print(F) #Print Results

After running this cell the result was the force was given as an array:
Problem 2:
[ 50 150 100 120]

Next I made the function as required in the HW by writing in cell:

# Problem 2
def force_to_acceleration(F, m):
    """Calculates the acceleration of a body of mass when a force F is applied on it
   Inputs: Force[F]= N ; Mass[m] = kg
   Output: Acceleration[a] = m/s^2"""

    a = F/m
    return a

Clicked run and in next cell tested it out with given values of F(100N,22N,450N) and m(150kg):
  print('Problem 2:')
  print(force_to_acceleration(100,150))
  print(force_to_acceleration(22,150))
  print(force_to_acceleration(450,150))

Which gave corresponding results of a=
  Problem 2:
  0.6666666666666666
  0.14666666666666667
  3.0

Problem 3:
Opened a seperate Jupyter Notebook and retitled it 'HW4_Acceleration_Function'
Created another function as instructed by writing in cell:

# Problem 3
def acceleration(u1, u2, t1, t2):
    """Calculates acceleration of a body using different speeds at different times
    Inputs: Speed 1 [u1] and Speed 2 [u2] = m/s ; Time 1 [t1] and Time 2 [ts] = s
    Output: Acceleration [a] = m/s^2"""

    a = (u2 - u1) / (t2 - t1)
    return a

Saved as .py (python) [File > Download as > Python (.py)]

In HW4_MayaSosa Jupyter Notebook wrote in cell to import function from .py file:
# Problem 3
from HW4_Acceleration_Function import acceleration

To input given numbers and run function wrote in cell:

# Problem 3
t1 = np.array([0,10,14,28,0])
t2 = np.array([2,14,16,32,10])
u1 = np.array([10,15,32,42,20])
u2 = np.array([13,30,36,20,22])

and ran cell, in next cell wrote:

print('Problem 3:')
print(acceleration(u1,u2,t1,t2))

Which gave outputs of a=
Problem 3:
[ 1.5   3.75  2.   -5.5   0.2 ]

Used a calculator to ensure the given results were correct [they were :)]
Wrote that in comments as well as named 2 test cases that could be used to verify code works:
1) If I put in (0,0,) for everything, I should get 0 back (tested, worked)
2) If I put in 1 for everything, I should get 0 back (tested, worked)

Problem 4:
Opened Github desktop and created a local repository for my NUMCOMP folder.
Commited w/ comment Handin folder (which I moved 0-PHZ3150-MayaSosa-Log into)
Previously I only created an individual repository for HW3 rather than adding my NUMCOMP and main Handin folder.
Deleted HW3_Repository that was under .git due to already having a copy in my main NUMCOMP folder (which I just put under .git)

Problem 5:
Saved Jupyter notebook and closed out of Jupyter session. Checked to make sure HW4_MayaSosa.ipynb was saved under ~Downloads\NUMCOMP\Handin\HW4_MayaSosa along with other .py file created and once saved will copy this log into HW4_MayaSosa as well.
Will right click on HW4_MayaSosa folder and zip file. Then open Github Desktop and find changes made to Handin folder and commit w/ comment.
After taking a screenshot of committed changed I will also add it to the zip file before submitting on webcourses to HW4.

 *****OUT Wed Sept 15 11:21:09 EST 2021

 *****IN Thurs Sept 16 17:28:54 EST 2021

 Start HW 5

 Problem 1:
 Files > ~Downloads\NUMCOMP\Handin > New Folder (renamed HW5_MayaSosa)
 Windows Start > Jupyter Notebooks > ~Downloads\NUMCOMP\Handin\HW5_MayaSosa > New > Python 3 Notebook (renamed HW5_MayaSosa)
 Opened Github desktop, pushed to Github
 Using heading/markdown in first cell wrote name, assignment #, and date and in second cell used markdown to write 'Problem 1'
 In next cell imported numpy

 Problem 2:
 Used markdown to write 'Problem 2'
 Emailed prof because I don't understand the difference between lists and arrays
 Found out I could do 'list(np.arange())' or 'list(range())' to create a list for velocity and time from x to y with a step of z.
 Created lists according to instructions and printed both as well as the 3rd to 5th and 8th element from the velocity list
 Copied HW4_Accelectation_Function from HW4_MayaSosa to HW5_MayaSosa folder and from it imported acceleration function into current notebook
 Used help on acceleration function to recall inputs of function
 Used imported function to calculate acceleration of given velocity/time pairs (elements 3-4, 4-5, and 5-8 of each list) and wrote an informative statement with the answers
 Checked results with calculator
 Changed 5th element in velocity to 40 and printed new velocity list

 Problem 3:
 Used markdown to write 'Problem 3'
 Created numpy array x from 1 to and including 100 with a step of 0.1
 Printed shape (1001) and type of x (<class 'numpy.ndarray'>)
 Printed x and then printed it's max, min, and mean in one line (100, 0, 50)
 Printed x-52
 Printed 0.05 * x

 Problem 4:
 Used markdown to write 'Problem 4'
 Created list titled student_h with values 5.01, 4.10, 6.02, 5.07, and 6.11
 Created function to return a list of each height in list form [m,cm] called ft_to_m_cm and wrote informative docstring
 To be continued

 Problem 5:
 Used markdown to write 'Problem 5'
 Created function in a separate file titled 'displacement' that calculates total displacement of a body during a time interval using initial speed and a constant acceleration and wrote informative docstring
 Saved as Displacement_Function.py file in ~Downloads\NUMCOMP\Handin\HW5_MayaSosa
 Imported function into main HW file
 Made lists for given values of initial speed, acceleration, and time and used it to calculate total displacement for each printed with informative statements
 Checked calculations with a calculator separately to ensure they were correct.

 Saved log and will finish HW5 later

 *****OUT Fri Sept 17 10:22:03 EST 2021

 *****IN Tues Sept 21 21:20:17 EST 2021

 Continuing HW 5
 From previous log:

 " Problem 1:
  Files > ~Downloads\NUMCOMP\Handin > New Folder (renamed HW5_MayaSosa)
  Windows Start > Jupyter Notebooks > ~Downloads\NUMCOMP\Handin\HW5_MayaSosa > New > Python 3 Notebook (renamed HW5_MayaSosa)
  Opened Github desktop, pushed to Github
  Using heading/markdown in first cell wrote name, assignment #, and date and in second cell used markdown to write 'Problem 1'
  In next cell imported numpy

  Problem 2:
  Used markdown to write 'Problem 2'
  Emailed prof because I don't understand the difference between lists and arrays
  Found out I could do 'list(np.arange())' or 'list(range())' to create a list for velocity and time from x to y with a step of z.
  Created lists according to instructions and printed both as well as the 3rd to 5th and 8th element from the velocity list
  Copied HW4_Accelectation_Function from HW4_MayaSosa to HW5_MayaSosa folder and from it imported acceleration function into current notebook
  Used help on acceleration function to recall inputs of function
  Used imported function to calculate acceleration of given velocity/time pairs (elements 3-4, 4-5, and 5-8 of each list) and wrote an informative statement with the answers
  Checked results with calculator
  Changed 5th element in velocity to 40 and printed new velocity list

  Problem 3:
  Used markdown to write 'Problem 3'
  Created numpy array x from 1 to and including 100 with a step of 0.1
  Printed shape (1001) and type of x (<class 'numpy.ndarray'>)
  Printed x and then printed it's max, min, and mean in one line (100, 0, 50)
  Printed x-52
  Printed 0.05 * x

  Problem 4:
  Used markdown to write 'Problem 4'
  Created list titled student_h with values 5.01, 4.10, 6.02, 5.07, and 6.11
  Created function to return a list of each height in  list form [m,cm] called ft_to_m_cm and wrote informative docstring
  To be continued

  Problem 5:
  Used markdown to write 'Problem 5'
  Created function in a separate file titled 'displacement' that calculates total displacement of a body during a time interval using initial speed and a constant acceleration and wrote informative docstring
  Saved as Displacement_Function.py file in ~Downloads\NUMCOMP\Handin\HW5_MayaSosa
  Imported function into main HW file
  Made lists for given values of initial speed, acceleration, and time and used it to calculate total displacement for each printed with informative statements
  Checked calculations with a calculator separately to ensure they were correct."

  Problem 4 (cont.):
  Imported math (import math)
  Looked up conversions of ft to in and then in to m to create function that will return the inputted number in feet as meters
  Researched how to round a number down using math (math.floor) and created another function finding cm
  Put return [math.floor(m), 'm', math.ceil(cm), 'cm'] so that cm rounds up as stated
  In next cell used format 'print('Student x has a height of', ft_to_m_cm(student_h[x-1]))' for all 5 elements in list student_h
  Checked results with calculator

 Problem 6:
 Saved finalized Jupyter Notebook into HW5_MayaSosa folder
 Pushed/Commited to Github through Github desktop with comment 'HW5_commit'
 Took a screenshot of pushed file on Github desktop, renamed it appropriately, and put into HW5_MayaSosa Folder
 Will save log as well and copy into HW5_MayaSosa before right-clicking file > Send to > Compressed (zip folder)
 Will push to Github once more with screenshot and submit zip folder onto Webcourses

 *****OUT Tues Sept 21 22:29:48 EST 2021

 *****IN Thurs Sept 23 13:41:23 EST 2021

 Start Midterm Project

 Problem 1:
 Files > Downloads\NUMCOMP\Handin\Midterm > New folder ; Renamed folder 'Midterm'
 Opened Jupyter Notebooks (Windows start > Jupyter Notebook)
 Made new notebook in Downloads\NUMCOMP\Handin\Midterm and renamed it 'Midterm_MayaSosa'
 Saved and pushed to Github (will do regularly)
 In first cell used markdown to write name, assignment number, and date due
 In next cell used markdown to write 'Problem 1:'
 Imported numpy

 Problem 2:
A) Used markdown to write 'Problem 2:'
    Wrote sentence informing user to choose and input from the following list a start/end city for their trip
B) Asked users to input their start and target city in format (Start_City, Target_City)
C) Made list of given cities that users will choose from titled city_list and let users know by printing "Cities to choose from: [city_list]"

Will continue later

*****OUT Thurs Sept 23 14:18:32 EST 2021

*****IN Tues Sept 28 16:21:43 EST 2021

Start HW 6

Problem 1:
Downloads\NUMCOMP\Handin > New Folder > Rename Folder: 'HW6_MayaSosa'
Windows Start > Jupyter Notebooks
Downloads\NUMCOMP\Handin\HW6_MayaSosa > New > Python Notebook
Renamed Notebook HW6_Maya and commited/pushed to Github
Wrote my name, assignment number, and the date in markdown on top of notebook
Wrote 'Problem 1:' as a comment and in next like imported numpy as np

Problem 2:
Imported pyplot as plt and numpy as np
Created arrays x, y, and z following instructions given
Created graph of y(x) and z(x) and changed:
  figsize to (10, 10 )
  y(x) color to red, linestyle to '--', and linewidth to 4
  z(x) color to blue, linestyle to 'None' (instead used marker x), and linewidth to 0.25
  Created x-axis label 'x-axis' and made fontsize 20
  Created y-axis label 'y/z-axis' and made fontsize 20
  Named plot 'Problem 2 Plot' with fontsize 30
  Made x and y-axis ticks size 15
Then saved plot as a pdf named 'HW6_Problem2_Plot.pdf'

Problem 3:
Created array q with given numbers and printed q
Used np.where to find where in the array (location) the value is greater than 50
Used for if loop to print which elements are greater than 50 but less than 70
Created list 'test_list' out of values in z (from problem 2) and printed the 12th through 14th elements of the list.
Changed element 28 of the list to be 42.0. Worked because lists are mutable (can be changed)
Created tuple 'test_tuple' out of values in z and used isinstance to check that list was converted into a tuple.
Printed the 20th element and then changed element 21 of test_tuple to 44.0. Did not work because tuples are immutable (can't be changed).
Created string 'word_list' containing given words and found which words contain e and a as well as the index of those letters.
Checked to see if 'star' or 'bright' was in word_list and found that star was while bright was not


Problem 4:
Created function Quadratic_Formula with docstring explaining that using the inputs (a,b,c) from a quadratic function in the form ax+by+c=0, this function will return the two roots in a list format.
Used function to find roots of function x^2-x-12=0 using input (1, -1, -12)
Printed 'The roots of quadratic function x^2-x-12=0 are' and then printed root list [-3,4]

Problem 5:
Saved Jupyter notebook in my handin/HW6_MayaSosa Folder
Commited to Github by opening github desktop and selecting HW6_MayaSosa folder and typing 'HW 6 commit' before commiting and clicking fetch origin to push to github
Took a screenshot of committed the file, renamed it appropriately, and added it to HW6_MayaSosa folder
Will save log and copy to HW6_MayaSosa
Will right-click on HW6_MayaSosa folder and select Send to < Compressed (zip) folder
Will turn in on Webcourses

*****OUT Wed Sept 29 02:07:35 EST 2021

*****IN Mon Oct 4 12:09:56 EST 2021

Continuing Midterm Project
From last Midterm Entry:
"Problem 1:
Files > Downloads\NUMCOMP\Handin\Midterm > New folder ; Renamed folder 'Midterm'
Opened Jupyter Notebooks (Windows start > Jupyter Notebook)
Made new notebook in Downloads\NUMCOMP\Handin\Midterm and renamed it 'Midterm_MayaSosa'
Saved and pushed to Github (will do regularly)
In first cell used markdown to write name, assignment number, and date due
In next cell used markdown to write 'Problem 1:'
Imported numpy

Problem 2:
A) Used markdown to write 'Problem 2:'
   Wrote sentence informing user to choose and input from the following list a start/end city for their trip
B) Asked users to input their start and target city in format (Start_City, Target_City)
C) Made list of given cities that users will choose from titled city_list and let users know by printing "Cities to choose from: [city_list]"

Redid Problem 2:
A) Used markdown to write 'Problem 2:'
  Printed informative sentence to users asking them to look at the following list of cities and choose two to travel between
  Created and printed list of cities given (part C but makes more sense to have the list on the top)
B) Created two inputs, start_city and target_city, and printed a statement asking users to input their chosen
  start city from the list in the first input box and their chosen destination city in the next input box and hit enter.
C) Made list city_list with provided cities and printed it out in part A (made more sense to show the list before asking them to choose)
D) Used if function to check if cities that were input were in the list, if they did not match created an error statement letting
  users know that the city they chose was not on the list and asking them to choose one from the list.
E) Tested code by inputting Paris as a start city and Orlando as the destination city. When the error statement popped up for
  Paris not being in the list I inputted new start city, Atlanta. Code then gave statement confirming that user has chosen
  to travel from Atlanta to Orlando. Took a screenshot of test and renamed appropriately as well as moved it to Midterm folder.

Problem 3:
A) Used markdown to write 'Problem 3:'
  Downloaded file distances_midterm.dat and moved it into NUMCOMP\Handin\Midterm Folder
  Read data into notebook as travel_data using function nploadtxt. and disregarding the comments (#)
B) Used for loops to scan city_list and find the index of start_city and target_city. Printed indexes
C) Found the distance between the start and target city by slicing travel_data using found indexes
  Printed informative statement letting the user know how many miles they will have to travel between their chosen cities.
D) Used 3 different equations to figure out the days, hours, and minutes it would take the user to travel between chosen cities
  and printed an informative statement letting them know how long in would take.
E) Tested program by inputting start city: Tampa and target city: Orlando. Got travel time as 1hr and 7min (Accurate)
F) Using everything I have coded so far in the program, I created a function called "Navigation" that uses the inputs (start_city, target_city)
  and gives the user an informative statement with the distance between the cities as well as the time it takes to get there (assuming an average speed of 75mph).
  Created an appropriate docstring and tested function out using start_city: Atlanta and target_city: Miami
  Printed an informative statement with correct values

Problem 4:
A) Copied navigation function that was created in problem 3f and made changes to add in a pitstop. Named new function nav_pitstop
  The inputs are now (start_city, pitstop_city, target_city)
  Ran it for (Boston, Denver, Sacramento), returned an informative sentence with proper values
B) Asked users to input a starting city, pitstop city, and target city in input boxes from given list.
C) Called on nav_pitstop function to give them the distance between start and pitstop city as well as time to get there and pitstop city to target city with the time as well (all in an informative sentence)
  Imported math to make code that takes the miles between cities and based on a 24.9mpg car that holds 16 gallons calculates how many stops for gas is needed and rounds up.
  Printed an informative statement letting users know how many stops they will have to make on each leg of their trip.
D) Created code to calculate the total price of gas they will use for their trip and printed an informative statement.

Problem 5:
A) Asked user to input a start and destination city
B) 1. Began by finding the index of the start and target city that the user input and slicing the travel_data array into the columns of those cities.
    Added the sliced lists together and then used a for loop to scan through and find the minimum value in the list NOT including the value where one of the distances = 0 because it was the same city as one of the start/end cities.
    Found the index of the minimum value and used city_list to then find which city the fastest pitstop was at.
    Printed informative statement of which city would make the fastest pitstop as well as the total distance of the trip including that pitstop.
  2. Re-ran code in part A to input start_city as Baltimore and target_city as Orlando. Pitstop city was Washington.
  3. Copied and tweaked code from problem 4 to print an informative statement letting the user know how many stops on each lap of the trip they will need to make for gas as well as price of the gas (assuming they fill their tank at each stop).

It didn't say to do this in the midterm file but I put together all the code made in problem 5 into its own function called 'trip_planner'
Made minor tweaks such as stating the time for entire trip rather than legs (more informative).
Tetsing function with start_city: Miami and target_city: Tampa. Results shown seemed to be correct and function worked as it should.

Problem 6:
Saved Jupyter notebook in my handin/Midterm Folder
Commited to Github by opening Github Desktop and selecting Midterm folder and typing 'Midterm Final Commit' before commiting and clicking fetch origin to push to github
Will save log and copy to Midterm folder
Will right-click on Midterm folder and select Send to < Compressed (zip) folder
Will turn in on Webcourses

*****OUT Oct 5 20:00:00 EST 2021

*****IN Oct 11 13:06:13 EST 2021

Start HW7:

Problem 1:
Files > Downloads\NUMCOMP\Handin > New folder ; Renamed folder 'HW7_MayaSosa'
Opened Jupyter Notebooks (Windows start > Jupyter Notebook)
Made new notebook in Downloads\NUMCOMP\Handin\HW7_MayaSosa and renamed it 'HW7_Maya'
Saved and pushed to Github (will do regularly)
In first cell used markdown to write name, assignment number, and date due
In next cell used markdown to write 'Problem 1:'
Imported numpy

Problem 2:
Used markdown to write 'Problem 2'
Used def to create function 'word_to_number' which given a number in word form would return the numeric value of the word (ex: 'one' = 1)
Wrote an appropriate docstring and created dictionary dict1 containing the values 0 to 20 in word form as the keys and the numeric values of the numbers as the values.
Made function return an informative statement with given input and output ('three is 3')
Ran function for 'three', 'seven', 'twelve', 'sixteen', and 'nineteen' and received a correct output

Problem 3:
Used markdown to write 'Problem 3'
Put given sentence as a string into python under variable 'sentence'
Used .split to split sentence and called it split_sentence
Made for loop to retrieve longest word of sentence then did the same with a while loop
Correctly got 'experienced' from both loops

Problem 4:
Used markdown to write 'Problem 4'
Created an array 'x' from 100 to 1,000 (NOT including 1000) in steps of 25 and then created array y of the same size of x but full of zeros using np.zeros(x.shape)
Created for loop to change values of y into half of the corresponding value of x for an even index and increasing to the power of 2 the corresponding value of x for odd indexes

Problem 5:
Used markdown to write 'Problem 5'
imported pandas as pd and csv
In class files on webcourses downloaded student_data.csv from HW7 file and moved to my HW7_MayaSosa folder
Used pd.read_csv to read data into a numpy array called all_grades
Created function pass_or_no_pass that would take the numpy array all_grades as an input and return in a tuple the student's ID, final grade, and whether they passed the class or not. Wrote an appropriate docstring.
Called function for all students and received appropriate outputs.

Problem 6:
Saved Jupyter notebook in my handin/HW7_MayaSosa Folder
Commited to Github by opening Github Desktop and selecting HW7_MayaSosa folder and typing 'HW7 Final Commit' before commiting and clicking fetch origin to push to github
Will save log and copy to HW7_MayaSosa folder
Will right-click on HW7_MayaSosa folder and select Send to < Compressed (zip) folder
Will turn in on Webcourses

*****OUT Oct 12 18:36:08 EST 2021

*****IN Oct 18 00:25:08 EST 2021

Start HW 8

Problem 1:
Files > Downloads\NUMCOMP\Handin > New folder ; Renamed folder 'HW8_MayaSosa'
Opened Jupyter Notebooks (Windows start > Jupyter Notebook)
Made new notebook in Downloads\NUMCOMP\Handin\HW8_MayaSosa and renamed it 'HW8_Maya'
Used markdown to write name, homework number, and date due
Used markdown to write 'Problem 1:'
Imported numpy as np
Saved and pushed to Github (will do regularly)

Problem 2:
Used markdown to write 'Problem 2:'
Imported matplotlib.pyplot as plt
Created arrays x and y with numpy.arange according to instructions
Used def to create function that uses the ellipse formula to plot an ellipse given a and b
Function had problems creating full ellipse, as there was a break at y=0. Error statement due to negative in sqrt, unsure how to fix
Ran function for given values of a and b and graphs were mostly correct

Problem 3:
Created new Python notebook named 'hw8_support_funct'
Used def to create function 'order_array' that will take an array and return in ordered from smallest to largest
Saved notebook as .py file
Imported function into HW8_Maya notebook and called it for given array
Checked with appropriate numpy function
My function was correct

Problem 4:
Installed sympy in Anaconda prompt using 'conda install sympy' and imported symbols, Eq, and solve into hw8_support_funct
Created function in hw8_support_funct called 'kepler_3rd' that, when given the period in days of a planet, uses Kepler's 3rd law to find it's orbital distance from the sun in Astronomical Units (AU)
Saved hw8_support_funct as .py file (replaced previously saved file) and imported 'kepler_3rd' into HW8_Maya Notebook
Called function for all planets in given table (using their period values) and printed results with informative statement containing the planet's name and orbital distance from sun (in AU)
Resulting values were accurate to given real values
Created 2 dictionaries using planet names as keys and my predicted values in one while used the real values in the another
Used dictionaries to create a graph that automatically put planet names on x-axis
Changed color and linestyle of the line of my predicted values and the line of real values while also adding a legend


Problem 5:
Saved Jupyter notebook in my handin/HW8_MayaSosa Folder
Commited to Github by opening Github Desktop and selecting HW8_MayaSosa folder and typing 'HW8 Final Commit' before commiting and clicking fetch origin to push to github
Will save log and copy to HW8_MayaSosa folder
Will right-click on HW8_MayaSosa folder and select Send to < Compressed (zip) folder
Will turn in on Webcourses

*****OUT Oct 19 00:00:00 EST 2021

*****IN Oct 23 07:40:00 EST 2021

Start HW 9

Problem 1:
Files > Downloads\NUMCOMP\Handin > New folder ; Renamed folder 'HW9_MayaSosa'
Opened Jupyter Notebooks (Windows start > Jupyter Notebook)
Made new notebook in Downloads\NUMCOMP\Handin\HW9_MayaSosa and renamed it 'HW9_Maya'
Used markdown to write name, homework number, and date due
Used markdown to write 'Problem 1:'
Imported numpy as np
Saved and pushed to Github (will do regularly)

Problem 2:
a) Created numpy array called 'sports' containing the given average distance per sport
Mapped each athlete to their ID number and created array 'athletes_times' the contains each participant's ID number and their average speed per sport (array shape = (6,4))
b) Used def to create function 'triathlon_times' with an appropriate docstring that takes the two arrays as inputs and returns in an informative statement which athlete will finish first and which will finish last plus their times in hours.
c) Created dictionary 'sports' and dictionary 'athletes_times' using same values previously given.
d) Used def to create new function 'triathalon_time_dict' with an appropriate docstring that takes the two dictionaries as inputs and returns in an informative statement the name of the athlete who will finish first and the name of who will finish last plus their times in hours.
Ran both functions and recieved an appropriate output for both

Problem 3:
a) Chose recent problem from Calculus III (MAC2313) and stated the problem as well as the solution in the notebook.
b) Used NumPy math and conditional statements to code my problem and ran it, which resulted in the correct output.
Created 3d graph to plot the HW problem, in which you could see that the solution was correct

Problem 4:
Moved to next week's HW

Problem 5:
Saved Jupyter notebook in my handin/HW9_MayaSosa Folder
Commited to Github by opening Github Desktop and selecting HW9_MayaSosa folder and typing 'HW9 Final Commit' before commiting and clicking fetch origin to push to github
(pls don't take points off- rubric says screenshot OR log description)
Will save log and copy to HW9_MayaSosa folder
Will right-click on HW9_MayaSosa folder and select Send to < Compressed (zip) folder
Will turn in on Webcourses

*****OUT OCT 25 22:09:45 EST 2021
